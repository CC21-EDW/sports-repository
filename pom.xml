<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.5.6</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>com.baloise.open.edw</groupId>
  <artifactId>sports-repository</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>sports-repository</name>
  <description>Provides a repository to handle persistence for all kinds of sports information (events, athlete, etc.).
  </description>

  <ciManagement>
    <system>Github Actions</system>
    <url>https://github.com/CC21-EDW/sports-repository/actions</url>
  </ciManagement>

  <scm>
    <url>https://github.com/CC21-EDW/sports-repository.git</url>
    <connection>scm:git:https://github.com/CC21-EDW/sports-repository.git</connection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <java.version>17</java.version>
    <sonar.organization>cc21-edw</sonar.organization>
    <sonar.projectKey>CC21-EDW_sports-repository</sonar.projectKey>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
    <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>

    <slf4j.version>1.7.32</slf4j.version>
    <confluent.version>5.3.6</confluent.version>
    <avro.version>1.11.0</avro.version>
    <kafka-schema-registry-maven-plugin.version>7.0.0</kafka-schema-registry-maven-plugin.version>
    <strava-java-client.version>1.0.5</strava-java-client.version>
    <edw-component.version>0.1.1</edw-component.version>
    <mapstruct.version>1.4.2.Final</mapstruct.version>
  </properties>

  <repositories>
    <repository>
      <id>edw-component</id>
      <name>GitHub CC21-EDW Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/CC21-EDW/edw-component</url>
      <releases><enabled>true</enabled></releases>
    </repository>
    <repository>
      <id>confluent</id>
      <url>https://packages.confluent.io/maven/</url>
      <releases><enabled>true</enabled></releases>
    </repository>
    <repository>
      <id>strava-api</id>
      <name>GitHub CC21-EDW Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/CC21-EDW/strava-api</url>
      <releases><enabled>true</enabled></releases>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>confluent</id>
      <url>https://packages.confluent.io/maven/</url>
      <releases><enabled>true</enabled></releases>
      <layout>default</layout>
    </pluginRepository>
  </pluginRepositories>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-avro-serializer</artifactId>
      <version>${confluent.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${avro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.baloise.open.edw</groupId>
      <artifactId>edw-component</artifactId>
      <version>${edw-component.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>1.16.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>1.16.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <version>1.16.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.baloise.open.edw</groupId>
      <artifactId>strava-java-client</artifactId>
      <version>${strava-java-client.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${project.parent.version}</version>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <!-- Download Avro schema from schema registry-->
        <groupId>io.confluent</groupId>
        <artifactId>kafka-schema-registry-maven-plugin</artifactId>
        <version>${kafka-schema-registry-maven-plugin.version}</version>
        <configuration>
          <subjects />
          <schemaRegistryUrls>
            <param>http://localhost:9012</param>
          </schemaRegistryUrls>
          <outputDirectory>src/main/avro</outputDirectory>
          <outputDirectory>${project.basedir}/src/generated/resources</outputDirectory>
          <subjectPatterns>
            <param>^lz.edw.strava-connect.activity-(key|value)$</param>
          </subjectPatterns>
        </configuration>
        <executions>
          <execution>
            <id>load-schema</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>download</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- Convert previous downloaded Avro schema into DTO -->
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <version>${avro.version}</version>
        <configuration>
          <stringType>String</stringType>
        </configuration>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>schema</goal>
            </goals>
            <configuration>
              <sourceDirectory>${project.basedir}/src/generated/resources</sourceDirectory>
              <outputDirectory>${project.basedir}/src/generated/java</outputDirectory>
              <includes>
                <include>**/*</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>0.2.0</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.7</version>
        <executions>
          <execution>
            <id>pre-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>jacocoArgLine</propertyName>
              <destFile>${project.build.directory}/jacoco/jacoco.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>post-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco/jacoco.exec</dataFile>
              <outputDirectory>${project.build.directory}/jacoco</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M5</version>
        <configuration>
          <argLine>${jacocoArgLine}</argLine>
          <reportsDirectory>${project.build.directory}/surefire</reportsDirectory>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.16</version>
        <executions>
          <execution>
            <id>add-third-party</id>
            <goals>
              <goal>add-third-party</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>github-ci</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry-maven-plugin</artifactId>
            <version>${kafka-schema-registry-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>load-schema</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
